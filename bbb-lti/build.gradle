/*
BigBlueButton open source conferencing system - http://www.bigbluebutton.org/

Copyright (c) 2012 BigBlueButton Inc. and by respective authors (see below).

This program is free software; you can redistribute it and/or modify it under the
terms of the GNU Lesser General Public License as published by the Free Software
Foundation; either version 3.0 of the License, or (at your option) any later
version.

BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License along
with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.
*/

buildscript {
  repositories {
    jcenter()
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
  }
  dependencies {
    classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    classpath "org.grails.plugins:hibernate5:${gormVersion - ".RELEASE"}"
    classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.15.1"
  }
}

version "0.5"
group "org.bigbluebutton.lti"

apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "war"
apply plugin: "org.grails.grails-web"
apply plugin: "asset-pipeline"
apply plugin: "org.grails.grails-gsp"

task resolveDeps(type: Copy) {
  into('lib')
  from configurations.default
  from configurations.default.allArtifacts.file
  doLast { println '[bbb:task] Resolved dependencies for bigbluebutton-lti application' }
}

// Task that creates the index file which lists all extra libs
task copyWebInf(type: Copy) {
  into("${project.buildDir}/resources/main/")
  from("src/main/webapp")
}

// make  processResources depends on copyWebInf task
processResources.dependsOn copyWebInf

repositories {
  jcenter()
  mavenLocal()
  maven { url "https://repo.grails.org/grails/core" }
  maven { url "https://jitpack.io" }
}

dependencies {
  compile "org.springframework.boot:spring-boot-starter-logging"
  compile "org.springframework.boot:spring-boot-autoconfigure"
  compile "org.grails:grails-core"
  compile "org.springframework.boot:spring-boot-starter-actuator"
  compile "org.springframework.boot:spring-boot-starter-tomcat"
  compile "org.grails:grails-web-boot"
  compile "org.grails:grails-logging"
  compile "org.grails:grails-plugin-rest"
  compile "org.grails:grails-plugin-databinding"
  compile "org.grails:grails-plugin-i18n"
  compile "org.grails:grails-plugin-services"
  compile "org.grails:grails-plugin-url-mappings"
  compile "org.grails:grails-plugin-interceptors"
  compile 'org.grails.plugins:external-config:1.2.2'
  compile "org.grails.plugins:cache"
  compile "org.grails.plugins:async"
  compile "org.grails.plugins:scaffolding"
  compile "org.grails.plugins:events"
  compile "org.grails.plugins:gsp"
  compile 'com.github.blindsidenetworks:oauth:master-SNAPSHOT'
  compile "org.json:json:20180813"
  console "org.grails:grails-console"
  profile "org.grails.profiles:web"
  runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.15.1"
  testCompile "org.grails:grails-gorm-testing-support"
  testCompile "org.grails.plugins:geb"
  testCompile "org.grails:grails-web-testing-support"
  testCompile "org.grails.plugins:geb:1.1.2"
  testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
  testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"
  testRuntime "org.seleniumhq.selenium:selenium-chrome-driver:2.47.1"
}

bootRun {
  jvmArgs('-Dspring.output.ansi.enabled=always')
  addResources = true
  String springProfilesActive = 'spring.profiles.active'
  systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

tasks.withType(Test) {
  systemProperty "geb.env", System.getProperty('geb.env')
  systemProperty "geb.build.reportsDir", reporting.file("geb/integrationTest")
  systemProperty "webdriver.chrome.driver", System.getProperty('webdriver.chrome.driver')
  systemProperty "webdriver.gecko.driver", System.getProperty('webdriver.gecko.driver')
}

assets {
  minifyJs = true
  minifyCss = true
}

/**

 grails.servlet.version = "3.0" // Change depending on target container compliance (2.5 or 3.0)
 grails.project.class.dir = "target/classes"
 grails.project.test.class.dir = "target/test-classes"
 grails.project.test.reports.dir = "target/test-reports"
 grails.project.work.dir = "target/work"
 grails.project.target.level = 1.8
 grails.project.source.level = 1.8
 //grails.project.war.file = "target/${appName}-${appVersion}.war"

 grails.project.fork = [
 // configure settings for compilation JVM, note that if you alter the Groovy version forked compilation is required
 //  compile: [maxMemory: 256, minMemory: 64, debug: false, maxPerm: 256, daemon:true],

 // configure settings for the test-app JVM, uses the daemon by default
 test   : [maxMemory: 768, minMemory: 64, debug: false, maxPerm: 256, daemon: true],
 // configure settings for the run-app JVM
 run    : [maxMemory: 768, minMemory: 64, debug: false, maxPerm: 256, forkReserve: false],
 // configure settings for the run-war JVM
 war    : [maxMemory: 768, minMemory: 64, debug: false, maxPerm: 256, forkReserve: false],
 // configure settings for the Console UI JVM
 console: [maxMemory: 768, minMemory: 64, debug: false, maxPerm: 256]
 ]

 grails.project.dependency.resolver = "maven" // or ivy
 grails.project.dependency.resolution = {// inherit Grails' default dependencies
 inherits("global") {// specify dependency exclusions here; for example, uncomment this to disable ehcache:
 // excludes 'ehcache'}log "error" // log level of Ivy resolver, either 'error', 'warn', 'info', 'debug' or 'verbose'
 checksums true // Whether to verify checksums on resolve
 legacyResolve false
 // whether to do a secondary resolve on plugin installation, not advised and here for backwards compatibility

 repositories {inherits true // Whether to inherit repository definitions from plugins

 grailsPlugins()
 grailsHome()
 mavenLocal()
 grailsCentral()
 mavenCentral()
 // uncomment these (or add new ones) to enable remote dependency resolution from public Maven repositories
 mavenRepo "https://jitpack.io"
 mavenRepo "http://repository.codehaus.org"
 mavenRepo "http://download.java.net/maven/2/"
 mavenRepo "http://repository.jboss.com/maven2/"}dependencies {compile 'org.json:json:20171018'
 compile 'com.github.blindsidenetworks:oauth:master-SNAPSHOT'
 // specify dependencies here under either 'build', 'compile', 'runtime', 'test' or 'provided' scopes e.g.
 // runtime 'mysql:mysql-connector-java:5.1.29'
 // runtime 'org.postgresql:postgresql:9.3-1101-jdbc41'
 test "org.grails:grails-datastore-test-support:1.0.2-grails-2.4"}plugins {// plugins for the build system only
 build ":tomcat:7.0.55.3" // or ":tomcat:8.0.22"

 // plugins for the compile step
 compile ":scaffolding:2.1.2"
 compile ':cache:1.1.8'
 // asset-pipeline 2.0+ requires Java 7, use version 1.9.x with Java 6
 compile ":asset-pipeline:2.5.7"

 // plugins needed at runtime but not for compilation
 runtime ":database-migration:1.4.0"
 runtime ":jquery:1.11.1"
 runtime ':twitter-bootstrap:3.3.5'}}*/